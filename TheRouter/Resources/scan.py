
import os,sys,json,subprocess

projectDir = os.path.abspath(sys.argv[1])

resultFileDir = os.path.abspath(sys.argv[2])
resultFile = os.path.join(resultFileDir,"TheRouter_Mappings.h")

infoPlistFile = os.path.abspath(sys.argv[3])
 
kControllerKey = 'TheRouterController'
kStoryboardControllerKey = 'TheRouterStoryboardController'
kSelectorrKey = 'TheRouterSelector'

def scan_annotations(key, mappingFile):
    cmd = 'grep -h -r "^' + key + '" ' + projectDir + ' --include \'*.[mh]\''
    annList = os.popen(cmd).readlines()
    annInfos = []

    for ann in annList:
        annComment = ann.replace('(',',').replace(')','').replace(' ','').replace('\n','').split(',')
        annInfos.append(','.join(annComment[1:]))

        annPre = annComment[0]
        path = annComment[1]
        name = 'kRouterPath'

        # 处理占位符情况
        for comment in path.split('/'):
            if comment.startswith(':'):
                path = path.replace(comment, '~:placeHolder')

        for comment in path.replace('_','/').replace('-','/').split('/'):
            if comment.startswith('~:'):
                continue
            name += comment.capitalize()
        
        if annPre == kControllerKey:
            name += 'VC'

        if annPre == kStoryboardControllerKey:
            name += 'VC'
            
        if annPre == kSelectorrKey:
            name += 'Sel'
        
        define = 'static NSString * const ' + name + ' = @"' + path + '";\n'
        print('TheRouter Scan Info:path define-' + define)
        mappingFile.write(define)
    
    return annInfos
    
class ScanException(Exception):
    pass    

def rewirte():
    if os.path.exists(projectDir) == False:
        raise ScanException('The input project scan path does not exist, please check and enter')
    
    if os.path.exists(resultFileDir) == False:
        raise ScanException('The inputted mapping file does not exist, please check and enter')
    
    if os.path.isfile(infoPlistFile) == False:
        raise ScanException('The entered info.plist file does not exist, please check and enter')
    
    annInfos = dict()
    with open(resultFile,'a') as mappingFile:
        mappingFile.truncate(0)

        mappingFile.write('//\n//  TheRouter_Mappings.h\n')
        mappingFile.write('//  This file is auto create by scan.py, do not edit this file\n\n')
        mappingFile.write('#import <Foundation/Foundation.h>\n\n')
        
        mappingFile.write('\n\n#pragma mark ------------------' + kControllerKey + '------------------\n')
        annInfos['vcs'] = scan_annotations(kControllerKey, mappingFile)

        mappingFile.write('\n\n#pragma mark -------------' + kStoryboardControllerKey + '-------------\n')
        annInfos['sbvcs'] = scan_annotations(kStoryboardControllerKey, mappingFile)

        mappingFile.write('\n\n#pragma mark ----------------' + kSelectorrKey + '---------------\n')
        annInfos['sels'] = scan_annotations(kSelectorrKey, mappingFile)

        mappingFile.close()
    
    os.system('/usr/libexec/PlistBuddy -c \"Clear" {}'.format(infoPlistFile))
    for key, anns in annInfos.items():
        os.system('/usr/libexec/PlistBuddy -c \"Add :{} array\" {}'.format(key,infoPlistFile))
        for ann in anns:
            os.system('/usr/libexec/PlistBuddy -c \"Add :{}: string {}\" {}'.format(key,ann,infoPlistFile))
        

rewirte()
